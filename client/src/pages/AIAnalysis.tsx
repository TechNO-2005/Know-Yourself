import { useQuery, useMutation } from "@tanstack/react-query";
import { queryClient } from "@/lib/queryClient";
import { Link } from "wouter";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator } from "@/components/ui/breadcrumb";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";

interface Analysis {
  id: number;
  userId: string;
  selfDiscoveries: string[];
  analysisTimestamp: string;
}

export default function AIAnalysis() {
  const { toast } = useToast();

  const { data: analysis, isLoading } = useQuery<Analysis>({
    queryKey: ["/api/analysis"],
  });

  const generateAnalysis = useMutation({
    mutationFn: async () => {
      await apiRequest("POST", "/api/analysis/generate", {});
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["/api/analysis"] });
      toast({
        title: "Analysis Generated",
        description: "Your psychological insights are ready!",
      });
    },
    onError: (error) => {
      toast({
        title: "Analysis Error",
        description: "Failed to generate analysis. Please ensure you have completed at least one reflection.",
        variant: "destructive",
      });
    },
  });

  const colorClasses = [
    "bg-blue-100 text-blue-600",
    "bg-emerald-100 text-emerald-600",
    "bg-violet-100 text-violet-600",
    "bg-orange-100 text-orange-600",
    "bg-pink-100 text-pink-600",
    "bg-teal-100 text-teal-600",
    "bg-indigo-100 text-indigo-600",
    "bg-cyan-100 text-cyan-600",
  ];

  return (
    <div className="min-h-screen bg-slate-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-slate-200">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex justify-between items-center mb-4">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-violet-600 rounded-xl flex items-center justify-center">
                <i className="fas fa-mirror text-white text-lg"></i>
              </div>
              <h1 className="text-2xl font-bold text-slate-900">Know Yourself</h1>
            </div>
            <Link href="/">
              <Button variant="ghost">
                <i className="fas fa-times text-xl"></i>
              </Button>
            </Link>
          </div>
          
          {/* Breadcrumbs */}
          <Breadcrumb>
            <BreadcrumbList>
              <BreadcrumbItem>
                <BreadcrumbLink href="/">Dashboard</BreadcrumbLink>
              </BreadcrumbItem>
              <BreadcrumbSeparator />
              <BreadcrumbItem>
                <BreadcrumbPage>AI Analysis</BreadcrumbPage>
              </BreadcrumbItem>
            </BreadcrumbList>
          </Breadcrumb>
        </div>
      </header>

      <main className="max-w-4xl mx-auto px-4 py-8">
        {/* Analysis Header */}
        <div className="text-center mb-8">
          <div className="w-20 h-20 bg-gradient-to-br from-violet-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <i className="fas fa-brain text-white text-3xl"></i>
          </div>
          <h2 className="text-3xl font-bold text-slate-900 mb-2">Your AI-Powered Analysis</h2>
          <p className="text-lg text-slate-600">Based on your reflections, here are psychological insights about yourself</p>
          <Badge className="mt-4 bg-violet-100 text-violet-800 hover:bg-violet-100">
            <i className="fas fa-sparkles mr-2"></i>
            Generated by Advanced AI
          </Badge>
        </div>

        {/* Disclaimer */}
        <Alert className="mb-8 border-amber-200 bg-amber-50">
          <i className="fas fa-info-circle text-amber-600"></i>
          <AlertDescription className="text-amber-700">
            <strong>Important Note:</strong> This analysis is an AI-based interpretation using psychological principles. 
            It's not a professional assessment, but rather insights to help you reflect further on your responses.
          </AlertDescription>
        </Alert>

        {!analysis && !isLoading && (
          <Card className="mb-8">
            <CardContent className="p-8 text-center">
              <div className="w-16 h-16 bg-violet-100 rounded-xl flex items-center justify-center mx-auto mb-4">
                <i className="fas fa-brain text-violet-600 text-2xl"></i>
              </div>
              <h3 className="text-xl font-semibold text-slate-900 mb-4">Generate Your Analysis</h3>
              <p className="text-slate-600 mb-6">Ready to discover psychological insights from your reflections?</p>
              <Button 
                onClick={() => generateAnalysis.mutate()}
                disabled={generateAnalysis.isPending}
                className="bg-gradient-to-r from-violet-500 to-purple-600 hover:from-violet-600 hover:to-purple-700"
              >
                {generateAnalysis.isPending ? (
                  <>
                    <i className="fas fa-spinner fa-spin mr-2"></i>
                    Generating Analysis...
                  </>
                ) : (
                  <>
                    <i className="fas fa-sparkles mr-2"></i>
                    Generate AI Analysis
                  </>
                )}
              </Button>
            </CardContent>
          </Card>
        )}

        {isLoading && (
          <Card className="mb-8">
            <CardContent className="p-8 text-center">
              <div className="animate-pulse">
                <div className="w-16 h-16 bg-slate-200 rounded-xl mx-auto mb-4"></div>
                <div className="h-4 bg-slate-200 rounded w-1/2 mx-auto mb-2"></div>
                <div className="h-4 bg-slate-200 rounded w-1/3 mx-auto"></div>
              </div>
            </CardContent>
          </Card>
        )}

        {/* Analysis Results */}
        {analysis && (
          <>
            <Card className="mb-8">
              <CardContent className="p-8">
                <h3 className="text-2xl font-bold text-slate-900 mb-6">Psychological Self-Discoveries</h3>
                
                <div className="space-y-6">
                  {analysis.selfDiscoveries.map((insight, index) => {
                    const colorClass = colorClasses[index % colorClasses.length];
                    return (
                      <div key={index} className="flex items-start space-x-4 p-4 rounded-xl bg-slate-50">
                        <div className={`w-8 h-8 ${colorClass} rounded-full flex items-center justify-center flex-shrink-0 mt-1`}>
                          <i className="fas fa-dot-circle text-sm"></i>
                        </div>
                        <div className="flex-1">
                          <p 
                            className="text-slate-800 font-medium leading-relaxed"
                            dangerouslySetInnerHTML={{ 
                              __html: insight.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>') 
                            }}
                          />
                        </div>
                      </div>
                    );
                  })}
                </div>
              </CardContent>
            </Card>

            {/* Analysis Metadata */}
            <div className="bg-slate-100 rounded-xl p-6 mb-8">
              <div className="flex items-center justify-between text-sm text-slate-600">
                <div className="flex items-center space-x-4">
                  <span>
                    <i className="fas fa-calendar mr-2"></i>
                    Generated on {new Date(analysis.analysisTimestamp).toLocaleDateString()}
                  </span>
                  <span>
                    <i className="fas fa-clock mr-2"></i>
                    {new Date(analysis.analysisTimestamp).toLocaleTimeString()}
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <span>Based on your completed reflections</span>
                  <i className="fas fa-check-circle text-emerald-500"></i>
                </div>
              </div>
            </div>
          </>
        )}

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Link href="/final-learning">
            <Button className="w-full sm:w-auto">
              <i className="fas fa-pen mr-2"></i>
              Add Your Personal Insights
            </Button>
          </Link>
          <Link href="/">
            <Button variant="outline" className="w-full sm:w-auto">
              <i className="fas fa-arrow-left mr-2"></i>
              Back to Dashboard
            </Button>
          </Link>
        </div>
      </main>
    </div>
  );
}
